{
	"scopeName": "yolol",
	"patterns": [
		{
			"include": "#expression"
		}
	],
	"repository": {
		"expression": {
			"patterns": [
				{
					"include": "#keyword"
				},
				{
					"include": "#string"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#constant"
				},
				{
					"include": "#function"
				},
				{
					"include": "#operator"
				},
				{
					"include": "#extvariable"
				},
				{
					"include": "#variable"
				}
			]
		},
		"keyword": {
			"match": "(?i)(?<=\\b|[^a-zA-Z])(if|then|else|end|goto|abs|sqrt|sin|cos|tan|asin|acos|atan)+",
			"name": "keyword.control"
		},
		"string": {
			"match": "\"[^\"]*\"",
			"name": "string"
		},
		"constant": {
			"match": "[0-9]+(\\.[0-9]+)?",
			"name": "constant.numeric"
		},
		"function": {
			"match": "([a-zA-Z]+)\\(",
			"captures": {
				"1": {
					"name": "support.function"
				}
			}
		},
		"operator": {
			"match": "(?i)(?<=\\b|[^a-zA-Z])(and|or|not)+",
			"name": "keyword.operator"
		},
		"extvariable": {
			"match": ":[a-zA-Z]+[a-zA-Z0-9_]*",
			"name": "variable.language"
		},
		"variable": {
			"match": ":?[a-zA-Z]+[a-zA-Z0-9_]*",
			"name": "variable"
		},
		"comment": {
			"begin": "//",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.go.mod"
				}
			},
			"end": "$",
			"name": "comment.line"
		}
	}
}